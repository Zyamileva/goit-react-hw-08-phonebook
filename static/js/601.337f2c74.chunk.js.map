{"version":3,"file":"static/js/601.337f2c74.chunk.js","mappings":"uPAEaA,EAAMC,EAAAA,EAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4EAMhBC,EAAQH,EAAAA,EAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,0B,UCL3BG,EAAgB,CACpBC,MAAO,GACPC,SAAU,IA+DZ,EA5DkB,SAAHC,GAAsB,IAAhBC,EAAQD,EAARC,SACnBC,QAAQC,IAAI,WAAYF,GACxB,IAAAG,GAA0BC,EAAAA,EAAAA,WAAQC,EAAAA,EAAAA,GAAC,CAAC,EAAIT,IAAgBU,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAjDK,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAEhBI,EAAe,SAAHC,GAAoB,IAAdC,EAAMD,EAANC,OACdC,EAA+BD,EAA/BC,KAAMC,EAAyBF,EAAzBE,MAAOC,EAAkBH,EAAlBG,KAAMC,EAAYJ,EAAZI,QACrBC,EAAoB,aAATF,EAAsBC,EAAUF,EAEjDL,GAAQJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACLG,GAAK,IAAAU,EAAAA,EAAAA,GAAA,GACPL,EAAOI,IAEZ,EAQME,EAAQ,WACZV,GAAQJ,EAAAA,EAAAA,GAAC,CAAC,EAAIT,GAChB,EAEMwB,GAAUC,EAAAA,EAAAA,SACVC,GAAaD,EAAAA,EAAAA,SACnBpB,QAAQC,IAAI,UAAWkB,GACvBnB,QAAQC,IAAI,QAASM,GACrB,IAAQX,EAAoBW,EAApBX,MAAOC,EAAaU,EAAbV,SAEf,OACEyB,EAAAA,EAAAA,MAAA,QAAMvB,SAjBa,SAAAwB,GACnBA,EAAEC,iBACFzB,GAAQK,EAAAA,EAAAA,GAAC,CAAC,EAAIG,IACdW,GACF,EAa+BO,SAAA,EAC3BH,EAAAA,EAAAA,MAACjC,EAAG,CAAAoC,SAAA,EACFC,EAAAA,EAAAA,KAACjC,EAAK,CAACkC,QAASR,EAAQM,SAAC,YACzBC,EAAAA,EAAAA,KAAA,SACEb,MAAOjB,EACPkB,KAAK,QACLF,KAAK,QACLgB,SAAUnB,EACVoB,GAAIV,EACJW,UAAQ,QAGZR,EAAAA,EAAAA,MAACjC,EAAG,CAAAoC,SAAA,EACFC,EAAAA,EAAAA,KAACjC,EAAK,CAACkC,QAASN,EAAWI,SAAC,eAC5BC,EAAAA,EAAAA,KAAA,SACEb,MAAOhB,EACPiB,KAAK,WACLF,KAAK,WACLmB,aAAa,KACbH,SAAUnB,EACVoB,GAAIR,EACJS,UAAQ,QAGZJ,EAAAA,EAAAA,KAAA,UAAQZ,KAAK,SAAQW,SAAC,eAG5B,E,wCC/BA,EAxBkB,WAChB,IAAMO,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1BC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IACxBC,GAAUJ,EAAAA,EAAAA,IAAYK,EAAAA,IAEtBC,GAAWC,EAAAA,EAAAA,MAKjB,OAAIH,GACKX,EAAAA,EAAAA,KAACe,EAAAA,GAAQ,CAACC,GAAG,OAIpBpB,EAAAA,EAAAA,MAAA,QAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACHO,IAAeN,EAAAA,EAAAA,KAAA,KAAAD,SAAG,2BACnBC,EAAAA,EAAAA,KAACiB,EAAS,CAAC5C,SAZK,SAAA6C,GAClBL,GAASM,EAAAA,EAAAA,IAAMD,GACjB,IAWKT,IAAaT,EAAAA,EAAAA,KAAA,KAAGoB,MAAO,CAAEC,MAAO,OAAQtB,SAAEU,MAGjD,C","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Div = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 15px;\n`;\n\nexport const Label = styled.label`\n  width: 80px;\n`;\n","import React, { useId, useState } from 'react';\nimport { Div, Label } from './LoginForm.styled';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n};\n\nconst LoginForm = ({ onSubmit }) => {\n  console.log('onSubmit', onSubmit);\n  const [state, setState] = useState({ ...INITIAL_STATE });\n\n  const handleChange = ({ target }) => {\n    const { name, value, type, checked } = target;\n    const newValue = type === 'checkbox' ? checked : value;\n\n    setState({\n      ...state,\n      [name]: newValue,\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    reset();\n  };\n\n  const reset = () => {\n    setState({ ...INITIAL_STATE });\n  };\n\n  const emailId = useId();\n  const passwordId = useId();\n  console.log('emailId', emailId);\n  console.log('state', state);\n  const { email, password } = state;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Div>\n        <Label htmlFor={emailId}>Email:</Label>\n        <input\n          value={email}\n          type=\"email\"\n          name=\"email\"\n          onChange={handleChange}\n          id={emailId}\n          required\n        ></input>\n      </Div>\n      <Div>\n        <Label htmlFor={passwordId}>Password:</Label>\n        <input\n          value={password}\n          type=\"password\"\n          name=\"password\"\n          autoComplete=\"of\"\n          onChange={handleChange}\n          id={passwordId}\n          required\n        ></input>\n      </Div>\n      <button type=\"submit\">Register</button>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from '../../components/LoginForm/LoginForm';\nimport { login } from '../../redux/auth/auth-operations';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectAuthLoading,\n  selectAuthError,\n  selectAuthIsLogin,\n} from '../../redux/auth/auth-slectors';\nimport { Navigate } from 'react-router-dom';\n\nconst LoginPage = () => {\n  const authLoading = useSelector(selectAuthLoading);\n  const authError = useSelector(selectAuthError);\n  const isLogin = useSelector(selectAuthIsLogin);\n\n  const dispatch = useDispatch();\n  const handleLogin = data => {\n    dispatch(login(data));\n  };\n\n  if (isLogin) {\n    return <Navigate to=\"/\" />;\n  }\n  //   console.log('lkjhgfdfghjk');\n  return (\n    <main>\n      <h1>Login</h1>\n      {authLoading && <p>....Login in progress</p>}\n      <LoginForm onSubmit={handleLogin} />\n      {authError && <p style={{ color: 'red' }}>{authError}</p>}\n    </main>\n  );\n};\n\nexport default LoginPage;\n"],"names":["Div","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","INITIAL_STATE","email","password","_ref","onSubmit","console","log","_useState","useState","_objectSpread","_useState2","_slicedToArray","state","setState","handleChange","_ref2","target","name","value","type","checked","newValue","_defineProperty","reset","emailId","useId","passwordId","_jsxs","e","preventDefault","children","_jsx","htmlFor","onChange","id","required","autoComplete","authLoading","useSelector","selectAuthLoading","authError","selectAuthError","isLogin","selectAuthIsLogin","dispatch","useDispatch","Navigate","to","LoginForm","data","login","style","color"],"sourceRoot":""}
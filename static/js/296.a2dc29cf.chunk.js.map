{"version":3,"file":"static/js/296.a2dc29cf.chunk.js","mappings":"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","sources":["components/RegisterForm/Styled.jsx","../node_modules/@mui/material/Grid/GridContext.js","../node_modules/@mui/material/Grid/gridClasses.js","../node_modules/@mui/material/Grid/Grid.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx","../node_modules/@mui/icons-material/LockOutlined.js"],"sourcesContent":["export const boxFormStyle = {\n  marginTop: 8,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n};\n\nexport const avatarStyle = {\n  m: 1,\n  bgcolor: 'secondary.main',\n};\n","'use client';\n\nimport * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst GridContext = /*#__PURE__*/React.createContext();\nif (process.env.NODE_ENV !== 'production') {\n  GridContext.displayName = 'GridContext';\n}\nexport default GridContext;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getGridUtilityClass(slot) {\n  return generateUtilityClass('MuiGrid', slot);\n}\nconst SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst DIRECTIONS = ['column-reverse', 'column', 'row-reverse', 'row'];\nconst WRAPS = ['nowrap', 'wrap-reverse', 'wrap'];\nconst GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nconst gridClasses = generateUtilityClasses('MuiGrid', ['root', 'container', 'item', 'zeroMinWidth',\n// spacings\n...SPACINGS.map(spacing => `spacing-xs-${spacing}`),\n// direction values\n...DIRECTIONS.map(direction => `direction-xs-${direction}`),\n// wrap values\n...WRAPS.map(wrap => `wrap-xs-${wrap}`),\n// grid sizes for all breakpoints\n...GRID_SIZES.map(size => `grid-xs-${size}`), ...GRID_SIZES.map(size => `grid-sm-${size}`), ...GRID_SIZES.map(size => `grid-md-${size}`), ...GRID_SIZES.map(size => `grid-lg-${size}`), ...GRID_SIZES.map(size => `grid-xl-${size}`)]);\nexport default gridClasses;","'use client';\n\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"columns\", \"columnSpacing\", \"component\", \"container\", \"direction\", \"item\", \"rowSpacing\", \"spacing\", \"wrap\", \"zeroMinWidth\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp, handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport requirePropFactory from '../utils/requirePropFactory';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useTheme from '../styles/useTheme';\nimport GridContext from './GridContext';\nimport gridClasses, { getGridUtilityClass } from './gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction getOffset(val) {\n  const parse = parseFloat(val);\n  return `${parse}${String(val).replace(String(parse), '') || 'px'}`;\n}\nexport function generateGrid({\n  theme,\n  ownerState\n}) {\n  let size;\n  return theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {\n    // Use side effect over immutability for better performance.\n    let styles = {};\n    if (ownerState[breakpoint]) {\n      size = ownerState[breakpoint];\n    }\n    if (!size) {\n      return globalStyles;\n    }\n    if (size === true) {\n      // For the auto layouting\n      styles = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n    } else if (size === 'auto') {\n      styles = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        flexShrink: 0,\n        maxWidth: 'none',\n        width: 'auto'\n      };\n    } else {\n      const columnsBreakpointValues = resolveBreakpointValues({\n        values: ownerState.columns,\n        breakpoints: theme.breakpoints.values\n      });\n      const columnValue = typeof columnsBreakpointValues === 'object' ? columnsBreakpointValues[breakpoint] : columnsBreakpointValues;\n      if (columnValue === undefined || columnValue === null) {\n        return globalStyles;\n      }\n      // Keep 7 significant numbers.\n      const width = `${Math.round(size / columnValue * 10e7) / 10e5}%`;\n      let more = {};\n      if (ownerState.container && ownerState.item && ownerState.columnSpacing !== 0) {\n        const themeSpacing = theme.spacing(ownerState.columnSpacing);\n        if (themeSpacing !== '0px') {\n          const fullWidth = `calc(${width} + ${getOffset(themeSpacing)})`;\n          more = {\n            flexBasis: fullWidth,\n            maxWidth: fullWidth\n          };\n        }\n      }\n\n      // Close to the bootstrap implementation:\n      // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n      styles = _extends({\n        flexBasis: width,\n        flexGrow: 0,\n        maxWidth: width\n      }, more);\n    }\n\n    // No need for a media query for the first size.\n    if (theme.breakpoints.values[breakpoint] === 0) {\n      Object.assign(globalStyles, styles);\n    } else {\n      globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n    }\n    return globalStyles;\n  }, {});\n}\nexport function generateDirection({\n  theme,\n  ownerState\n}) {\n  const directionValues = resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  });\n  return handleBreakpoints({\n    theme\n  }, directionValues, propValue => {\n    const output = {\n      flexDirection: propValue\n    };\n    if (propValue.indexOf('column') === 0) {\n      output[`& > .${gridClasses.item}`] = {\n        maxWidth: 'none'\n      };\n    }\n    return output;\n  });\n}\n\n/**\n * Extracts zero value breakpoint keys before a non-zero value breakpoint key.\n * @example { xs: 0, sm: 0, md: 2, lg: 0, xl: 0 } or [0, 0, 2, 0, 0]\n * @returns [xs, sm]\n */\nfunction extractZeroValueBreakpointKeys({\n  breakpoints,\n  values\n}) {\n  let nonZeroKey = '';\n  Object.keys(values).forEach(key => {\n    if (nonZeroKey !== '') {\n      return;\n    }\n    if (values[key] !== 0) {\n      nonZeroKey = key;\n    }\n  });\n  const sortedBreakpointKeysByValue = Object.keys(breakpoints).sort((a, b) => {\n    return breakpoints[a] - breakpoints[b];\n  });\n  return sortedBreakpointKeysByValue.slice(0, sortedBreakpointKeysByValue.indexOf(nonZeroKey));\n}\nexport function generateRowGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    rowSpacing\n  } = ownerState;\n  let styles = {};\n  if (container && rowSpacing !== 0) {\n    const rowSpacingValues = resolveBreakpointValues({\n      values: rowSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    let zeroValueBreakpointKeys;\n    if (typeof rowSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: rowSpacingValues\n      });\n    }\n    styles = handleBreakpoints({\n      theme\n    }, rowSpacingValues, (propValue, breakpoint) => {\n      var _zeroValueBreakpointK;\n      const themeSpacing = theme.spacing(propValue);\n      if (themeSpacing !== '0px') {\n        return {\n          marginTop: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingTop: getOffset(themeSpacing)\n          }\n        };\n      }\n      if ((_zeroValueBreakpointK = zeroValueBreakpointKeys) != null && _zeroValueBreakpointK.includes(breakpoint)) {\n        return {};\n      }\n      return {\n        marginTop: 0,\n        [`& > .${gridClasses.item}`]: {\n          paddingTop: 0\n        }\n      };\n    });\n  }\n  return styles;\n}\nexport function generateColumnGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    columnSpacing\n  } = ownerState;\n  let styles = {};\n  if (container && columnSpacing !== 0) {\n    const columnSpacingValues = resolveBreakpointValues({\n      values: columnSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    let zeroValueBreakpointKeys;\n    if (typeof columnSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: columnSpacingValues\n      });\n    }\n    styles = handleBreakpoints({\n      theme\n    }, columnSpacingValues, (propValue, breakpoint) => {\n      var _zeroValueBreakpointK2;\n      const themeSpacing = theme.spacing(propValue);\n      if (themeSpacing !== '0px') {\n        return {\n          width: `calc(100% + ${getOffset(themeSpacing)})`,\n          marginLeft: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingLeft: getOffset(themeSpacing)\n          }\n        };\n      }\n      if ((_zeroValueBreakpointK2 = zeroValueBreakpointKeys) != null && _zeroValueBreakpointK2.includes(breakpoint)) {\n        return {};\n      }\n      return {\n        width: '100%',\n        marginLeft: 0,\n        [`& > .${gridClasses.item}`]: {\n          paddingLeft: 0\n        }\n      };\n    });\n  }\n  return styles;\n}\nexport function resolveSpacingStyles(spacing, breakpoints, styles = {}) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  }\n  // in case of string/number `spacing`\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [styles[`spacing-xs-${String(spacing)}`]];\n  }\n  // in case of object `spacing`\n  const spacingStyles = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n    if (Number(value) > 0) {\n      spacingStyles.push(styles[`spacing-${breakpoint}-${String(value)}`]);\n    }\n  });\n  return spacingStyles;\n}\n\n// Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\nconst GridRoot = styled('div', {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      container,\n      direction,\n      item,\n      spacing,\n      wrap,\n      zeroMinWidth,\n      breakpoints\n    } = ownerState;\n    let spacingStyles = [];\n\n    // in case of grid item\n    if (container) {\n      spacingStyles = resolveSpacingStyles(spacing, breakpoints, styles);\n    }\n    const breakpointsStyles = [];\n    breakpoints.forEach(breakpoint => {\n      const value = ownerState[breakpoint];\n      if (value) {\n        breakpointsStyles.push(styles[`grid-${breakpoint}-${String(value)}`]);\n      }\n    });\n    return [styles.root, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, ...spacingStyles, direction !== 'row' && styles[`direction-xs-${String(direction)}`], wrap !== 'wrap' && styles[`wrap-xs-${String(wrap)}`], ...breakpointsStyles];\n  }\n})(({\n  ownerState\n}) => _extends({\n  boxSizing: 'border-box'\n}, ownerState.container && {\n  display: 'flex',\n  flexWrap: 'wrap',\n  width: '100%'\n}, ownerState.item && {\n  margin: 0 // For instance, it's useful when used with a `figure` element.\n}, ownerState.zeroMinWidth && {\n  minWidth: 0\n}, ownerState.wrap !== 'wrap' && {\n  flexWrap: ownerState.wrap\n}), generateDirection, generateRowGap, generateColumnGap, generateGrid);\nexport function resolveSpacingClasses(spacing, breakpoints) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  }\n  // in case of string/number `spacing`\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [`spacing-xs-${String(spacing)}`];\n  }\n  // in case of object `spacing`\n  const classes = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n    if (Number(value) > 0) {\n      const className = `spacing-${breakpoint}-${String(value)}`;\n      classes.push(className);\n    }\n  });\n  return classes;\n}\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    container,\n    direction,\n    item,\n    spacing,\n    wrap,\n    zeroMinWidth,\n    breakpoints\n  } = ownerState;\n  let spacingClasses = [];\n\n  // in case of grid item\n  if (container) {\n    spacingClasses = resolveSpacingClasses(spacing, breakpoints);\n  }\n  const breakpointsClasses = [];\n  breakpoints.forEach(breakpoint => {\n    const value = ownerState[breakpoint];\n    if (value) {\n      breakpointsClasses.push(`grid-${breakpoint}-${String(value)}`);\n    }\n  });\n  const slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', ...spacingClasses, direction !== 'row' && `direction-xs-${String(direction)}`, wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, ...breakpointsClasses]\n  };\n  return composeClasses(slots, getGridUtilityClass, classes);\n};\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiGrid'\n  });\n  const {\n    breakpoints\n  } = useTheme();\n  const props = extendSxProp(themeProps);\n  const {\n      className,\n      columns: columnsProp,\n      columnSpacing: columnSpacingProp,\n      component = 'div',\n      container = false,\n      direction = 'row',\n      item = false,\n      rowSpacing: rowSpacingProp,\n      spacing = 0,\n      wrap = 'wrap',\n      zeroMinWidth = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rowSpacing = rowSpacingProp || spacing;\n  const columnSpacing = columnSpacingProp || spacing;\n  const columnsContext = React.useContext(GridContext);\n\n  // columns set with default breakpoint unit of 12\n  const columns = container ? columnsProp || 12 : columnsContext;\n  const breakpointsValues = {};\n  const otherFiltered = _extends({}, other);\n  breakpoints.keys.forEach(breakpoint => {\n    if (other[breakpoint] != null) {\n      breakpointsValues[breakpoint] = other[breakpoint];\n      delete otherFiltered[breakpoint];\n    }\n  });\n  const ownerState = _extends({}, props, {\n    columns,\n    container,\n    direction,\n    item,\n    rowSpacing,\n    columnSpacing,\n    wrap,\n    zeroMinWidth,\n    spacing\n  }, breakpointsValues, {\n    breakpoints: breakpoints.keys\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridContext.Provider, {\n    value: columns,\n    children: /*#__PURE__*/_jsx(GridRoot, _extends({\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref\n    }, otherFiltered))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `xl` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('Grid', Grid);\n  // eslint-disable-next-line no-useless-concat\n  Grid['propTypes' + ''] = _extends({}, Grid.propTypes, {\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\nexport default Grid;","import React, { useState } from 'react';\nimport { boxFormStyle, avatarStyle } from './Styled';\nimport {\n  Avatar,\n  Button,\n  Container,\n  Typography,\n  CssBaseline,\n  TextField,\n  Box,\n  Grid,\n} from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n\nconst INITIAL_STATE = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst RegisterForm = ({ onSubmit }) => {\n  const [state, setState] = useState({ ...INITIAL_STATE });\n\n  const handleChange = ({ target }) => {\n    const { name, value, type, checked } = target;\n    const newValue = type === 'checkbox' ? checked : value;\n\n    setState({\n      ...state,\n      [name]: newValue,\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    reset();\n  };\n\n  const reset = () => {\n    setState({ ...INITIAL_STATE });\n  };\n\n  const { name, email, password } = state;\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box sx={boxFormStyle}>\n        <Avatar sx={avatarStyle}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form onSubmit={handleSubmit} noValidate>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <TextField\n                autoComplete=\"fname\"\n                value={name}\n                name=\"name\"\n                onChange={handleChange}\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                value={email}\n                type=\"email\"\n                name=\"email\"\n                onChange={handleChange}\n                id=\"email\"\n                label=\"Email Address\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                value={password}\n                type=\"password\"\n                name=\"password\"\n                onChange={handleChange}\n                label=\"Password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            sx={{ mt: 3, mb: 2 }}\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Sign Up\n          </Button>\n        </form>\n      </Box>\n    </Container>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\nimport { signup } from '../../redux/auth/auth-operations';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectAuthLoading,\n  selectAuthError,\n} from '../../redux/auth/auth-slectors';\n\nconst RegisterPage = () => {\n  const authLoading = useSelector(selectAuthLoading);\n  const authError = useSelector(selectAuthError);\n\n  const dispatch = useDispatch();\n  const handleSignup = data => {\n    dispatch(signup(data));\n  };\n\n  return (\n    <main>\n      <h1>Please Sign Up</h1>\n      {authLoading && <p>....Register in progress</p>}\n      <RegisterForm onSubmit={handleSignup} />\n      {authError && <p style={{ color: 'red' }}>{authError}</p>}\n    </main>\n  );\n};\n\nexport default RegisterPage;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2M9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9zm9 14H6V10h12zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2\"\n}), 'LockOutlined');"],"names":["boxFormStyle","marginTop","display","flexDirection","alignItems","avatarStyle","m","bgcolor","React","getGridUtilityClass","slot","generateUtilityClass","GRID_SIZES","generateUtilityClasses","concat","_toConsumableArray","map","spacing","direction","wrap","size","_excluded","getOffset","val","parse","parseFloat","String","replace","extractZeroValueBreakpointKeys","_ref3","breakpoints","values","nonZeroKey","Object","keys","forEach","key","sortedBreakpointKeysByValue","sort","a","b","slice","indexOf","GridRoot","styled","name","overridesResolver","props","styles","ownerState","container","item","zeroMinWidth","spacingStyles","arguments","length","undefined","Number","isNaN","breakpoint","value","push","resolveSpacingStyles","breakpointsStyles","root","_ref10","_extends","boxSizing","flexWrap","width","margin","minWidth","_ref2","theme","directionValues","resolveBreakpointValues","handleBreakpoints","propValue","output","gridClasses","maxWidth","_ref4","rowSpacing","zeroValueBreakpointKeys","rowSpacingValues","_zeroValueBreakpointK","themeSpacing","_defineProperty","paddingTop","includes","_ref7","columnSpacing","columnSpacingValues","_zeroValueBreakpointK2","marginLeft","paddingLeft","_ref","reduce","globalStyles","flexBasis","flexGrow","flexShrink","columnsBreakpointValues","columns","columnValue","Math","round","more","fullWidth","assign","up","useUtilityClasses","classes","spacingClasses","className","resolveSpacingClasses","breakpointsClasses","slots","composeClasses","Grid","inProps","ref","themeProps","useThemeProps","useTheme","extendSxProp","columnsProp","columnSpacingProp","_props$component","component","_props$container","_props$direction","_props$item","rowSpacingProp","_props$spacing","_props$wrap","_props$zeroMinWidth","other","_objectWithoutPropertiesLoose","columnsContext","GridContext","breakpointsValues","otherFiltered","_jsx","children","clsx","as","INITIAL_STATE","email","password","onSubmit","_useState","useState","_objectSpread","_useState2","_slicedToArray","state","setState","handleChange","target","type","checked","newValue","reset","_jsxs","Container","CssBaseline","Box","sx","Avatar","LockOutlinedIcon","Typography","variant","e","preventDefault","noValidate","xs","TextField","autoComplete","onChange","required","id","label","autoFocus","Button","mt","mb","color","authLoading","useSelector","selectAuthLoading","authError","selectAuthError","dispatch","useDispatch","RegisterForm","data","signup","style","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}
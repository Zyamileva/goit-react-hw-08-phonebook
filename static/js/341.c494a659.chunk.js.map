{"version":3,"file":"static/js/341.c494a659.chunk.js","mappings":"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","sources":["components/LoginForm/Styled.jsx","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["export const avatarStyle = {\n  m: 1,\n  bgcolor: 'secondary.main',\n};\n\nexport const boxFormStyle = {\n  marginTop: 8,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n};\n","import React, { useState } from 'react';\nimport { avatarStyle, boxFormStyle } from './Styled';\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  TextField,\n  Container,\n  Typography,\n  Box,\n} from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n};\n\nconst LoginForm = ({ onSubmit }) => {\n  console.log('onSubmit', onSubmit);\n  const [state, setState] = useState({ ...INITIAL_STATE });\n\n  const handleChange = ({ target }) => {\n    const { name, value, type, checked } = target;\n    const newValue = type === 'checkbox' ? checked : value;\n\n    setState({\n      ...state,\n      [name]: newValue,\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    reset();\n  };\n\n  const reset = () => {\n    setState({ ...INITIAL_STATE });\n  };\n\n  const { email, password } = state;\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box sx={boxFormStyle}>\n        <Avatar sx={avatarStyle}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form noValidate onSubmit={handleSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            value={email}\n            type=\"email\"\n            name=\"email\"\n            onChange={handleChange}\n            autoComplete=\"email\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            value={password}\n            onChange={handleChange}\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Sign In\n          </Button>\n        </form>\n      </Box>\n    </Container>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from '../../components/LoginForm/LoginForm';\nimport { login } from '../../redux/auth/auth-operations';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectAuthLoading,\n  selectAuthError,\n} from '../../redux/auth/auth-slectors';\n\nconst LoginPage = () => {\n  const authLoading = useSelector(selectAuthLoading);\n  const authError = useSelector(selectAuthError);\n  //   const isLogin = useSelector(selectAuthIsLogin);\n\n  const dispatch = useDispatch();\n  const handleLogin = data => {\n    dispatch(login(data));\n  };\n\n  //   if (isLogin) {\n  //     return <Navigate to=\"/\" />;\n  //   }\n  //   console.log('lkjhgfdfghjk');\n  return (\n    <main>\n      <h1>Login</h1>\n      {authLoading && <p>....Login in progress</p>}\n      <LoginForm onSubmit={handleLogin} />\n      {authError && <p style={{ color: 'red' }}>{authError}</p>}\n    </main>\n  );\n};\n\nexport default LoginPage;\n"],"names":["avatarStyle","m","bgcolor","boxFormStyle","marginTop","display","flexDirection","alignItems","INITIAL_STATE","email","password","_ref","onSubmit","console","log","_useState","useState","_objectSpread","_useState2","_slicedToArray","state","setState","handleChange","_ref2","target","name","value","type","checked","newValue","_defineProperty","reset","_jsxs","Container","component","maxWidth","children","_jsx","CssBaseline","Box","sx","Avatar","LockOutlinedIcon","Typography","variant","noValidate","e","preventDefault","TextField","margin","required","fullWidth","id","label","onChange","autoComplete","autoFocus","Button","color","mt","mb","authLoading","useSelector","selectAuthLoading","authError","selectAuthError","dispatch","useDispatch","LoginForm","data","login","style"],"sourceRoot":""}